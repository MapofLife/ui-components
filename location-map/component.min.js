/*! 2016-02-05 */
angular.module("mol-location-map-templates",[]).run(["$templateCache",function($templateCache){$templateCache.put("mol-location-map-main.html","<leaflet paths=paths markers=markers center=center bounds=bounds width={{width}} layers=layers controls defaults=defaults height={{height}}></leaflet>")}]),function(){var cssText=".angular-leaflet-map svg{width:initial;height:initial}",styleEl=document.createElement("style");if(document.getElementsByTagName("head")[0].appendChild(styleEl),styleEl.styleSheet)styleEl.styleSheet.disabled||(styleEl.styleSheet.cssText=cssText);else try{styleEl.innerHTML=cssText}catch(e){styleEl.innerText=cssText}}(),angular.module("mol.location-map",["mol-location-map-templates"]).directive("molLocationMap",["$q","$state","$http","leafletData","leafletBoundsHelpers","$compile",function($q,$state,$http,leafletData,leafletBoundsHelpers,$compile){return{restrict:"AE",scope:{constraints:"=constraints",sidebar:"=sidebar",palettes:"=palettes",width:"=width",height:"=height"},templateUrl:"mol-location-map-main.html",link:function(scope,element,attr,leafletData){},controller:function($scope,$state,$http,$element,leafletData,MOLApiX){addResizeListener($element.context,function(){leafletData.getMap().then(function(map){map.invalidateSize()})}),angular.extend($scope,{drawing:!1,canceller:$q.defer(),markers:{},defaults:{minZoom:2,scrollWheelZoom:!0},center:{lat:0,lng:0,zoom:2},controls:{scale:!0,layers:!0,draw:{},custom:[]},paths:{},bounds:{},layers:{baselayers:{map:{name:"Basic base map",type:"xyz",url:"http://cartodb-basemaps-{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png",layerOptions:{subdomains:["a","b","c"],attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="http://cartodb.com/attributions">CartoDB</a>',continuousWorld:!1},errorTileUrl:"/app/img/blank_tile.png"},satellite:{name:"Satellite",type:"xyz",url:"http://mt1.google.com/vt/lyrs=y&x={x}&y={y}&z={z}",layerOptions:{attribution:'&copy; <a href="https://www.google.com/copyright">Google</a>',continuousWorld:!1},errorTileUrl:"/app/img/blank_tile.png"},terrain:{name:"Terrain",type:"xyz",url:"http://mt1.google.com/vt/lyrs=m,t&x={x}&y={y}&z={z}",layerOptions:{attribution:'&copy; <a href="https://www.google.com/copyright">Google</a>',continuousWorld:!1},errorTileUrl:"/app/img/blank_tile.png"}},overlays:{}}}),$scope.setRegion=function(region){var theBounds=getBounds(region);region=angular.extend(region,{bounds:theBounds}),$scope.constraints.applied.region=region,$scope.constraints.selected.region=region,$scope.bounds=theBounds},$scope.getBounds=function(region){return region.extent?leafletBoundsHelpers.createBoundsFromArray([[region.extent.coordinates[0][2][1],region.extent.coordinates[0][2][0]],[region.extent.coordinates[0][0][1],region.extent.coordinates[0][0][0]]]):void 0},$scope.$watch("constraints.applied",function(newValue,oldValue){newValue&&($scope.canceller.resolve(),$scope.canceller=$q.defer(),$scope.updateMap(angular.extend(angular.copy(newValue),{palette:$scope.constraints.palette,region:$scope.constraints.region})))},!0),$scope.$watch("constraints.palette",function(newValue,oldValue){newValue&&($scope.canceller.resolve(),$scope.canceller=$q.defer(),$scope.updateMap(angular.extend(angular.copy($scope.constraints).applied,{palette:$scope.constraints.palette,region:$scope.constraints.region})))},!0),$scope.$watch("constraints.region.type",function(n,v){if(n)try{"global"===n?$scope.layers.overlays.regionBoundary.visible=!1:$scope.layers.overlays.regionBoundary.visible=!0}catch(e){}}),$scope.$watch("constraints.applied.regions",function(newValue,oldValue){newValue&&$scope.updateBounds()},!0),$scope.updateMap=function(constraints){$scope.layers.overlays.refinedRegion=void 0,$http({withCredentials:!1,method:"POST",url:"/location/api/mountain_region/map",data:constraints,timeout:$scope.canceller.promise}).then(function(result,status,headers,config){$scope.layers.overlays.refinedRegion={type:"xyz",url:"https://earthengine.googleapis.com/map/{0}/{z}/{x}/{y}?token={1}".format(result.data.id,result.data.token),layerOptions:{attribution:"©2015 Map of Life",continuousWorld:!1},layerParams:{showOnSelector:!1},name:"Selected regions",opacity:1,refresh:!0,doRefresh:!0,errorTileUrl:"/app/img/blank_tile.png",visible:!0}})},$scope.updateBounds=function(){var bounds=null;angular.forEach($scope.constraints.applied.regions,function(region){var extent=JSON.parse(region.extent),regionBounds=L.geoJson(extent).getBounds();bounds?bounds.extend(regionBounds):bounds=regionBounds,$scope.bounds={southWest:bounds.getSouthWest(),northEast:bounds.getNorthEast()},$scope.constraints.region.bounds=$scope.bounds})},$scope.$on("leafletDirectiveMap.baselayerchange",function(ev,layer){leafletData.getLayers().then(function(l){angular.forEach(l.baselayers,function(bl){bl.setZIndex(-1)})})}),$scope.selectRegion=function(region){var dup=!1;angular.forEach($scope.constraints.selected.regions,function(r){r.id==region.id&&(dup=!0)}),dup||$scope.constraints.selected.regions.push(angular.copy(region))},$scope.$on("leafletDirectiveMap.utfgridClick",function(event,args){null!=args.data&&$scope.selectRegion(args.data)}),$http({withCredentials:!1,method:"POST",url:"https://mol.cartodb.com/api/v1/map/named/display_region",data:{type:"mountain_region"}}).then(function(result,status,headers,config){$scope.layers.overlays.regionBoundary={type:"utfGrid",url:"//d3dvrpov25vfw0.cloudfront.net/api/v1/map/{0}/0/{z}/{x}/{y}.grid.json?callback={cb}".format(result.data.layergroupid),layerOptions:{attribution:"©2015 Map of Life",continuousWorld:!1},layerParams:{showOnSelector:!1},name:"regionGrid",opacity:.8,refresh:!0,doRefresh:!0,errorTileUrl:"/app/img/blank_tile.png",visible:!0,key:result.data.layergroupid,user:"mol",layer:"0"}})}}}]);