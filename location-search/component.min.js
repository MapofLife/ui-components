/*! 2017-01-18 */
angular.module("mol-location-search-templates",["mol-location-search-autocomplete.html","mol-location-search-control.html","mol-species-search-autocomplete.html","mol-species-search-control.html"]),angular.module("mol-location-search-autocomplete.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("mol-location-search-autocomplete.html",'<select placeholder="Select a region..." class=form-control ng-model=regions.selected style=max-width:158px;min-width:158px><option ng-repeat="region in (regions.available | filter: $select.search) track by region.region_id" ng-bind-html=region.name ng-value=region></option></select>')}]),angular.module("mol-location-search-control.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("mol-location-search-control.html",'<table class=search><tr><td><i ng-click=global() uib-tooltip="Zoom to global scope." style=color:#ffffff class="clickable fa fa-globe fa-2x"></i></td><td><span class=form-group><div ng-include="\'mol-location-search-autocomplete.html\'"></div></span></td></tr></table>')}]),angular.module("mol-species-search-autocomplete.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("mol-species-search-autocomplete.html",'<script type=text/ng-template id=ac-template.html><a class="searchResult">\n\t\t<span class="sciName" bind-html-unsafe="match.label.n | typeaheadHighlight:query"></span>\n\t    <span class="commonName" bind-html-unsafe="match.label.v | typeaheadHighlight:query"></span>\n\t</a></script><input class=form-control autocomplete=on ng-model=selected.value placeholder="Select a species" typeahead="species.n as species for species in searchSpecies($viewValue)" typeahead-on-select=selectSpecies($model) typeahead-template-url=ac-template.html>')}]),angular.module("mol-species-search-control.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("mol-species-search-control.html",'<table class=search><tr><td><ui-select ng-model=groups.selected><ui-select-match class=group-label placeholder="Select a group...">{{$select.selected.label}}&nbsp;&nbsp;</ui-select-match><ui-select-choices repeat="group in groups.available track by $index"><div ng-bind-unsafe-html="group.label | uppercase"></div><small class=group-label>{{ group.label }}</small></ui-select-choices></ui-select></td><td><span class=form-group><div ng-include="\'mol-species-search-autocomplete.html\'"></div></span></td><td class=hidden-xxs><button type=button ng-click=randomSpecies() class="random top_button btn btn-default">Pick random</button></td></tr></table>')}]),angular.module("mol.location-search",["mol-location-search-templates"]).directive("molLocationSearch",["molApi","$state","$q","$translate","$rootScope",function(molApi,$state,$q,$translate,$rootScope){return{restrict:"E",scope:!1,transclude:!1,templateUrl:"mol-location-search-control.html",controller:function($scope,$state){$scope.canceller=$q.defer(),$scope.regionTypes={selected:void 0,available:[]},$scope.regions={available:[],selected:{name:"Select a region"}},$rootScope.$on("$translateChangeSuccess",function(e){$scope.selectRegionType($scope.regionTypes.selected)}),$scope.global=function(){$scope.selectRegion({bnds:[-180,-90,180,90],name:"",type:"global"})},$scope.selectRegionType=function(type){if(type&&type.dataset_id){var lang=$translate.use();$scope.regionTypes.selected=type,$state.transitionTo($state.current,{regiontype:type.type,lang:$translate.use()},{notify:!1,inherit:!0,reload:!1}),molApi({service:"spatial/regions/list",params:{dataset_id:type.dataset_id,lang:lang},canceller:$scope.canceller,loading:!0}).success(function(response){$scope.regions.available=response.filter(function(r){return r.download}),angular.forEach(response,function(region){try{($scope.regions.selected&&region.region_id===$scope.regions.selected.region_id||void 0===$scope.regions.selected&&region.name.toLowerCase()===$state.params.region.toLowerCase())&&$scope.selectRegion(region)}catch(e){}})})}},$scope.selectRegion=function(region){$scope.$parent.region=angular.copy(region),$scope.regions.selected=angular.copy(region),$state.transitionTo($state.current,{region:region.name.toLowerCase()},{notify:!1,inherit:!0,reload:!1})},$scope.$watch("regionTypes.selected",function(newValue,oldValue){newValue&&$scope.selectRegionType(newValue)}),$scope.selectRegionType({type:"countries",dataset_id:"e9707baa-46e2-4ec4-99b6-86b1712e02de"})}}}]);