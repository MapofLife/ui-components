/*! 2016-06-21 */
!function(){var cssText="mol-species-search{margin-right:80px}mol-species-search .dropdown-menu{margin-left:-180px}",styleEl=document.createElement("style");if(document.getElementsByTagName("head")[0].appendChild(styleEl),styleEl.styleSheet)styleEl.styleSheet.disabled||(styleEl.styleSheet.cssText=cssText);else try{styleEl.innerHTML=cssText}catch(e){styleEl.innerText=cssText}}(),angular.module("mol-species-search-templates",[]).run(["$templateCache",function($templateCache){$templateCache.put("mol-species-search-autocomplete.html",'<script type=text/ng-template id=ac-template.html><a class="searchResult">\n\t\t<span class="sciName" ng-bind-html="match.label.scientificname | uibTypeaheadHighlight:query"></span>\n\t  <span class="commonName" ng-bind-html="((match.label.vernacular) ? match.label.vernacular : \'\') | uibTypeaheadHighlight:query"></span>\n\t</a></script><script type=text/ng-template id=popup-template.html><div class="custom-popup-wrapper">\n\t\t <ul class="dropdown-menu ng-isolate-scope"\n\t\t \t\tng-show="isOpen() && !moveInProgress"\n\t\t\t\tstyle="position:absolute;"\n\t\t\t\tng-style="{top: position().top+\'px\', right: position().right+\'px\'}"\n\t\t\t\trole="listbox" aria-hidden="false"\n\t\t\t\tuib-typeahead-popup=""\n\t\t\t\tmatches="matches" active="activeIdx"\n\t\t\t\tselect="select(activeIdx, evt)"\n\t\t\t\tmove-in-progress="moveInProgress" query="query"\n\n\t\t\t\tassign-is-open="assignIsOpen(isOpen)" debounce="debounceUpdate" template-url="ac-template.html">\n     </ul>\n  </div></script><input class=form-control autocomplete=on ng-model=selected.value placeholder="Search for a species" uib-typeahead="species.scientificname as species for species in searchSpecies(($viewValue)?$viewValue:\'.\')" typeahead-on-select=selectSpecies($model) typeahead-template-url=ac-template.html>'),$templateCache.put("mol-species-search-control.html",'<table class=search><tr><td><select placeholder="Select a group..." class=form-control ng-model=groups.selected ng-options="group.value as group.label | capitalize for group in groups.available"><option selected disabled>Select a group</option><option ng-value=null>All groups</option></select></td><td><span class=form-group><div ng-include="\'mol-species-search-autocomplete.html\'" style=position:relative></div></span></td><td ng-show=!$state.params.embed><button type=button ng-click=randomSpecies() class="random top_button btn btn-default">Pick Random</button></td></tr></table>')}]),angular.module("mol.species-search",["mol-species-search-templates"]).directive("molSpeciesSearch",["molApi","$state","$q",function(molApi,$state,$q){return{restrict:"E",scope:!1,transclude:!1,templateUrl:"mol-species-search-control.html",controller:function($scope){var regionid=void 0;try{regionid=$scope.$parent.region.dataset_id}catch(e){}$scope.canceller=$q.defer(),$scope.searchSpecies=function(term){return molApi({service:"species/groupsearch",params:{query:term,group:$scope.groups.selected,regionid:$scope.region.region_id},canceller:$scope.canceller,loading:!0}).then(function(results){return results.data})},$scope.groups={available:[]},$scope.updateTaxa=function(region_id){molApi({canceller:$scope.canceller,loading:!0,service:"spatial/regions/taxa",params:region_id?{region_id:region_id}:{},creds:!0}).then(function(results){var groups=[];angular.forEach(results.data,function(result){groups.push({label:result.taxa.replace("fishs","fish"),value:result.taxa})}),$scope.groups.available=groups})},$scope.selectSpecies=function(scientificname){""===scientificname?$scope.randomSpecies():molApi({service:"species/habitat",params:{id:scientificname},canceller:$scope.canceller,loading:!0}).success(function(species){if(void 0!=species){if(void 0!=species.prefs&&void 0!=species.prefs.habitats){for(var bools=[],i=0;i<17;i++)bools.push(!1);try{species.prefs.habitats.split(",").forEach(function(h){bools[parseInt(h)]=!0})}catch(e){}species.prefs.habitats=bools,100==species.prefs.tree_cover_min&&(species.prefs.tree_cover_min=50)}species.refine={},species.protect={},species.maps={},species.updateMaps=!0,species.habitat={stats:{forest_b1:void 0,forest_b0:void 0,pop_se_b1:void 0,area_se_b1:void 0,area_conf_95_10:[void 0,void 0],pop_b0:void 0,pop_conf_95_10:[void 0,void 0],area_b1:void 0,area_b0:void 0,forest_se_b1:void 0,forest_percent_change:void 0,pop_percent_change:void 0,area_percent_change:void 0,forest_conf_95_10:[void 0,void 0],pop_b1:void 0},area:[[2012,0],[2003,0],[2011,0],[2001,0],[2002,0],[2010,0],[2004,0],[2005,0],[2006,0],[2007,0],[2008,0],[2009,0]],forest:[[2012,0],[2003,0],[2011,0],[2001,0],[2002,0],[2010,0],[2004,0],[2005,0],[2006,0],[2007,0],[2008,0],[2009,0]],pop:[[2012,0],[2003,0],[2011,0],[2001,0],[2002,0],[2010,0],[2004,0],[2005,0],[2006,0],[2007,0],[2008,0],[2009,0]]},$scope.$parent.species=species}})},$scope.randomSpecies=function(){var group=null;try{group=$scope.groups.selected.value}catch(e){}molApi({service:"species/random",params:{taxogroup:group},canceller:$scope.canceller,loading:!0}).success(function(species){$scope.groups.selected=species.taxa,$scope.selectSpecies(species.scientificname)})},$scope.$watch("species",function(newValue,oldValue){if(newValue){var taxa=newValue.taxa||"Any group";$scope.groups.selected=taxa}}),$scope.$watch("region.id",function(newValue,oldValue){newValue&&$scope.updateTaxa(newValue)}),$scope.updateTaxa(),$state.params.scientificname?$scope.selectSpecies($state.params.scientificname.replace(/_/g," ")):$scope.randomSpecies()}}}]);